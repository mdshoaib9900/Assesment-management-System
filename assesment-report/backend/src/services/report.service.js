const data = require("../data/data");
const { assessments } = require("../config/assesment.config.js");
const { getValueByPath } = require("../utils");
const { generatePdf } = require("./pdf.service");

function buildHtml(record, conf) {
  return `
  <html>
    <head>
      <style>
        body {
          font-family: Arial, sans-serif;
          margin: 30px;
          color: #333;
        }
        h1 {
          text-align: center;
          color: #2c3e50;
          margin-bottom: 5px;
        }
        h2 {
          text-align: center;
          color: #7f8c8d;
          font-size: 16px;
          margin-top: 0;
        }
        .meta {
          text-align: center;
          margin-bottom: 30px;
          font-size: 14px;
        }
        h3 {
          background: #2c3e50;
          color: #fff;
          padding: 8px 12px;
          border-radius: 4px;
          margin-top: 25px;
        }
        table {
          width: 100%;
          border-collapse: collapse;
          margin-bottom: 20px;
        }
        th, td {
          padding: 10px;
          border: 1px solid #ddd;
          text-align: left;
        }
        th {
          background: #f4f6f7;
        }
        .field-label {
          font-weight: bold;
          width: 40%;
        }
        .footer {
          text-align: center;
          font-size: 12px;
          color: #999;
          margin-top: 40px;
        }
      </style>
    </head>
    <body>
      <h1>${conf.displayName || "Assessment Report"}</h1>
      <h2>Generated Report</h2>
      <div class="meta">
        <p><b>Session ID:</b> ${record.session_id}</p>
        <p><b>Assessment ID:</b> ${record.assessment_id}</p>
        <p><b>Date:</b> ${new Date().toLocaleDateString()}</p>
      </div>

      ${conf.sections
        .map(
          (sec) => `
          <h3>${sec.title}</h3>
          <table>
            <tbody>
              ${sec.fields
                .map((f) => {
                  const val = f.special
                    ? "[special mapping here]" // placeholder until you implement
                    : getValueByPath(record, f.path) || "N/A";
                  return `
                    <tr>
                      <td class="field-label">${f.label}</td>
                      <td>${val}</td>
                    </tr>
                  `;
                })
                .join("")}
            </tbody>
          </table>
        `
        )
        .join("")}

      <div class="footer">
        <p>Generated by Assessment Management System Â© ${new Date().getFullYear()}</p>
      </div>
    </body>
  </html>
  `;
}


async function generateReport(session_id) {
  const record = data.find((d) => d.session_id === session_id);
  if (!record) throw new Error("Session not found");
  const conf = assessments[record.assessment_id];
  if (!conf) throw new Error("No config for assessment_id");

  const html = buildHtml(record, conf);
  const filePath = await generatePdf(html, `${session_id}.pdf`);
  return filePath;
}

module.exports = { generateReport };
